apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: consul-controller-server
spec:
  serviceName: consul-controller-server
  podManagementPolicy: Parallel
  replicas: 3
  template:
    metadata:
      annotations:
        'consul.hashicorp.com/connect-inject': 'false'
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchLabels:
                  app: consul-controller-server
              topologyKey: kubernetes.io/hostname
      terminationGracePeriodSeconds: 30
      securityContext:
        fsGroup: 1000
      volumes:
        - name: config
          configMap:
            name: consul-controller-server-config
      containers:
        - name: consul
          image: 'consul:1.8.2'
          env:
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
          command:
            - '/bin/sh'
            - '-ec'
            - |
              exec /bin/consul agent \
                -advertise="${POD_IP}" \
                -bind=0.0.0.0 \
                -bootstrap-expect=3 \
                -client=0.0.0.0 \
                -config-dir=/consul/config \
                -datacenter=dc1 \
                -data-dir=/consul/data \
                -domain=consul \
                -hcl="connect { enabled = true }" \
                -ui \
                -retry-join=consul-controller-server-0.consul-controller-server \
                -retry-join=consul-controller-server-1.consul-controller-server \
                -retry-join=consul-controller-server-2.consul-controller-server \
                -server
          volumeMounts:
            - name: config
              mountPath: /consul/config
          lifecycle:
            preStop:
              exec:
                command:
                  - /bin/sh
                  - -c
                  - consul leave
          ports:
            - containerPort: 8500
              name: http
            - containerPort: 8301
              name: serflan
            - containerPort: 8302
              name: serfwan
            - containerPort: 8300
              name: server
            - containerPort: 8600
              name: dns-tcp
              protocol: 'TCP'
            - containerPort: 8600
              name: dns-udp
              protocol: 'UDP'
          readinessProbe:
            # NOTE(mitchellh): when our HTTP status endpoints support the
            # proper status codes, we should switch to that. This is temporary.
            exec:
              command:
                - '/bin/sh'
                - '-ec'
                - |
                  curl http://127.0.0.1:8500/v1/status/leader \
                  2>/dev/null | grep -E '".+"'
            failureThreshold: 2
            initialDelaySeconds: 5
            periodSeconds: 3
            successThreshold: 1
            timeoutSeconds: 5
          resources:
            limits:
              cpu: 100m
              memory: 100Mi
            requests:
              cpu: 100m
              memory: 100Mi