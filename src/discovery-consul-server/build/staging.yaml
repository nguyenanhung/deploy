apiVersion: v1
data:
  extra-from-values.json: '{}'
kind: ConfigMap
metadata:
  labels:
    app: discovery-consul-server
    env: staging
    group: discovery
  name: discovery-consul-server-config-c49dcd5k2f
  namespace: staging-discovery
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    service.alpha.kubernetes.io/tolerate-unready-endpoints: "true"
  labels:
    app: discovery-consul-server
    env: staging
    group: discovery
  name: discovery-consul-server
  namespace: staging-discovery
spec:
  clusterIP: None
  ports:
  - name: http
    port: 8500
    targetPort: 8500
  - name: serflan-tcp
    port: 8301
    protocol: TCP
    targetPort: 8301
  - name: serflan-udp
    port: 8301
    protocol: UDP
    targetPort: 8301
  - name: serfwan-tcp
    port: 8302
    protocol: TCP
    targetPort: 8302
  - name: serfwan-udp
    port: 8302
    protocol: UDP
    targetPort: 8302
  - name: server
    port: 8300
    targetPort: 8300
  - name: dns-tcp
    port: 8600
    protocol: TCP
    targetPort: dns-tcp
  - name: dns-udp
    port: 8600
    protocol: UDP
    targetPort: dns-udp
  publishNotReadyAddresses: true
  selector:
    app: discovery-consul-server
    env: staging
    group: discovery
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: discovery-consul-server
    env: staging
    group: discovery
  name: discovery-consul-server-dns
  namespace: staging-discovery
spec:
  ports:
  - name: dns-tcp
    port: 53
    protocol: TCP
    targetPort: dns-tcp
  - name: dns-udp
    port: 53
    protocol: UDP
    targetPort: dns-udp
  selector:
    app: discovery-consul-server
    env: staging
    group: discovery
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: discovery-consul-server
    env: staging
    group: discovery
  name: discovery-consul-server-ui
  namespace: staging-discovery
spec:
  ports:
  - name: http
    port: 80
    targetPort: 8500
  selector:
    app: discovery-consul-server
    env: staging
    group: discovery
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    app: discovery-consul-server
    env: staging
    group: discovery
  name: discovery-consul-server
  namespace: staging-discovery
spec:
  podManagementPolicy: Parallel
  replicas: 3
  selector:
    matchLabels:
      app: discovery-consul-server
      env: staging
      group: discovery
  serviceName: discovery-consul-server
  template:
    metadata:
      annotations:
        consul.hashicorp.com/connect-inject: "false"
      labels:
        app: discovery-consul-server
        env: staging
        group: discovery
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                app: discovery-consul-server
                env: staging
                group: discovery
            topologyKey: kubernetes.io/hostname
      containers:
      - command:
        - /bin/sh
        - -ec
        - |
          exec /bin/consul agent \
            -advertise="${POD_IP}" \
            -bind=0.0.0.0 \
            -bootstrap-expect=3 \
            -client=0.0.0.0 \
            -config-dir=/consul/config \
            -datacenter=dc1 \
            -data-dir=/consul/data \
            -domain=consul \
            -hcl="connect { enabled = true }" \
            -ui \
            -retry-join=discovery-consul-server-0.discovery-consul-server \
            -retry-join=discovery-consul-server-1.discovery-consul-server \
            -retry-join=discovery-consul-server-2.discovery-consul-server \
            -server
        env:
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        image: consul:1.8.2
        lifecycle:
          preStop:
            exec:
              command:
              - /bin/sh
              - -c
              - consul leave
        name: consul
        ports:
        - containerPort: 8500
          name: http
        - containerPort: 8301
          name: serflan
        - containerPort: 8302
          name: serfwan
        - containerPort: 8300
          name: server
        - containerPort: 8600
          name: dns-tcp
          protocol: TCP
        - containerPort: 8600
          name: dns-udp
          protocol: UDP
        readinessProbe:
          exec:
            command:
            - /bin/sh
            - -ec
            - |
              curl http://127.0.0.1:8500/v1/status/leader \
              2>/dev/null | grep -E '".+"'
          failureThreshold: 2
          initialDelaySeconds: 5
          periodSeconds: 3
          successThreshold: 1
          timeoutSeconds: 5
        resources:
          limits:
            cpu: 100m
            memory: 100Mi
          requests:
            cpu: 100m
            memory: 100Mi
        volumeMounts:
        - mountPath: /consul/config
          name: config
        - mountPath: /consul/data
          name: data
      nodeSelector:
        node-role.sigmaott.com/api: "true"
      securityContext:
        fsGroup: 1000
      terminationGracePeriodSeconds: 30
      volumes:
      - configMap:
          name: discovery-consul-server-config-c49dcd5k2f
        name: config
  volumeClaimTemplates:
  - metadata:
      labels:
        app: discovery-consul-server
        env: staging
        group: discovery
      name: data
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 1Gi
      storageClassName: openebs-hostpath
---
apiVersion: policy/v1beta1
kind: PodDisruptionBudget
metadata:
  labels:
    app: discovery-consul-server
    env: staging
    group: discovery
  name: discovery-consul-server
  namespace: staging-discovery
spec:
  maxUnavailable: 1
  selector:
    matchLabels:
      app: discovery-consul-server
      env: staging
      group: discovery
